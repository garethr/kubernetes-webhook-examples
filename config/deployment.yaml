apiVersion: v1
kind: Namespace
metadata:
  name: webhook
---
kind: Service
apiVersion: v1
metadata:
  name: feature-webhook
  namespace: feature-operator
spec:
  selector:
    app: feature-webhook
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: feature-webhook
  namespace: feature-operator
  name: feature-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: feature-webhook
  template:
    metadata:
      labels:
        app: feature-webhook
      name: feature-webhook
    spec:
      containers:
        - name: webhook
          image: garethr/hook:latest
          imagePullPolicy: IfNotPresent
          args:
            - "--bind=0.0.0.0:443"
            - "--certfile=/certs/tls.crt"
            - "--keyfile=/certs/tls.key"
            - "app:app"
          volumeMounts:
            - readOnly: true
              mountPath: /certs
              name: webhook-cert
          readinessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: 443
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: 443
            initialDelaySeconds: 3
      volumes:
        - name: webhook-cert
          secret:
            secretName: webhook-cert
